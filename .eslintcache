[{"E:\\weatherapp\\src\\index.js":"1","E:\\weatherapp\\src\\App.js":"2","E:\\weatherapp\\src\\reportWebVitals.js":"3","E:\\weatherapp\\src\\components\\Today.js":"4","E:\\weatherapp\\src\\components\\Daily.js":"5","E:\\weatherapp\\src\\components\\Hourly.js":"6","E:\\weatherapp\\src\\components\\Maps.js":"7"},{"size":534,"mtime":1610039658330,"results":"8","hashOfConfig":"9"},{"size":8701,"mtime":1610079053974,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":5700,"mtime":1609803184619,"results":"12","hashOfConfig":"9"},{"size":7966,"mtime":1609814178365,"results":"13","hashOfConfig":"9"},{"size":8167,"mtime":1609813676767,"results":"14","hashOfConfig":"9"},{"size":2943,"mtime":1610077339548,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"8i3ggk",{"filePath":"19","messages":"20","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\weatherapp\\src\\index.js",[],["34","35"],"E:\\weatherapp\\src\\App.js",["36","37","38","39","40","41","42","43","44","45","46","47","48","49","50"],"E:\\weatherapp\\src\\reportWebVitals.js",[],"E:\\weatherapp\\src\\components\\Today.js",["51","52","53","54"],"import React, { useState, useEffect } from \"react\";\r\nimport $ from \"jquery\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTint,\r\n  faWind,\r\n  faArrowsAltV,\r\n  faTemperatureLow,\r\n  faSun,\r\n  faEye,\r\n  faLungs,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nfunction Today(props) {\r\n  const [humidity, sethumidity] = useState(0);\r\n  const [atm, setatm] = useState(0);\r\n  const [speed, setspeed] = useState(0);\r\n\r\n  const [temper, settemp] = useState(0);\r\n  const [feelslike, setfeels] = useState();\r\n\r\n  const [iconcode, setcode] = useState(0);\r\n  const [descrypt, setdes] = useState(\" \");\r\n  const [curtime, settime] = useState();\r\n  const [aqi, setaqi] = useState();\r\n  const [dewpt, setdewpt] = useState();\r\n  const [vis, setvis] = useState();\r\n  const [uv, setuv] = useState();\r\n  useEffect(() => {\r\n    for (const [key, value] of Object.entries(props.data)) {\r\n      console.log(key, value);\r\n\r\n      if (key === \"data\") {\r\n        for (const obj of value) {\r\n          settemp(obj.temp);\r\n          setfeels(obj.app_temp);\r\n          setatm(obj.slp);\r\n          sethumidity(obj.rh.toFixed(2));\r\n          setspeed(obj.wind_spd.toFixed(2));\r\n          setdes(obj.weather.description);\r\n          setcode(obj.weather.icon);\r\n          setaqi(obj.aqi);\r\n          setdewpt(obj.dewpt);\r\n          setvis(obj.vis);\r\n          setuv(obj.uv.toFixed(2));\r\n        }\r\n      }\r\n    }\r\n  }, [props.data]);\r\n\r\n  if (props.flag == 1) {\r\n    return (\r\n      <div>\r\n        <Container\r\n          fluid\r\n          className=\"d-flex flex-column align-items-center\"\r\n          id=\"sup\"\r\n        >\r\n          <Col md={6} id=\"main\" className=\"d-flex justify-content-between \">\r\n            <div>\r\n              <h1 id=\"first\">{temper} C</h1>\r\n              <h3 id=\"second\">{props.name}</h3>\r\n\r\n              <h3 id=\"third\">{descrypt}</h3>\r\n            </div>\r\n            <div>\r\n              <div id=\"icon\">\r\n                <img\r\n                  src={`https://www.weatherbit.io/static/img/icons/${iconcode}.png `}\r\n                  alt=\"Weather icon\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col md={6} id=\"more\">\r\n            <Row>\r\n              <Col md={6} className=\"d-flex justify-content-between\">\r\n                <div>\r\n                  <p>\r\n                    {\" \"}\r\n                    <FontAwesomeIcon icon={faTint} id=\"font\"></FontAwesomeIcon>humidity:\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p>{humidity}</p>\r\n                </div>\r\n              </Col>\r\n              <Col md={6} className=\"d-flex justify-content-between\">\r\n                <div>\r\n                  <p>\r\n                    <FontAwesomeIcon icon={faArrowsAltV} id=\"font\"></FontAwesomeIcon>\r\n                    pressure:{\" \"}\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p>{atm} mb</p>\r\n                </div>\r\n              </Col>\r\n\r\n              <Col md={6} className=\"d-flex justify-content-between\">\r\n                <div>\r\n                  <p>\r\n                    <FontAwesomeIcon icon={faWind} id=\"font\"></FontAwesomeIcon>windspeed:\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p> {speed} m/s</p>\r\n                </div>\r\n              </Col>\r\n              <Col md={6} className=\"d-flex justify-content-between\">\r\n                <div>\r\n                  <p>\r\n                    <FontAwesomeIcon icon={faTemperatureLow} id=\"font\"></FontAwesomeIcon>\r\n                    feels like:\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p>{feelslike} C</p>\r\n                </div>\r\n              </Col>\r\n              <Col md={6} className=\"d-flex justify-content-between\">\r\n                <div>\r\n                  <p>\r\n                    <FontAwesomeIcon icon={faLungs} id=\"font\"></FontAwesomeIcon>aqi:\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p>{aqi}[EPA]</p>\r\n                </div>\r\n              </Col>\r\n              <Col md={6} className=\"d-flex justify-content-between\">\r\n                <div>\r\n                  <p>\r\n                    <FontAwesomeIcon icon={faTint} id=\"font\"></FontAwesomeIcon >dew point:\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p>{dewpt} C</p>\r\n                </div>\r\n              </Col>\r\n              <Col md={6} className=\"d-flex justify-content-between\">\r\n                <div>\r\n                  <p>\r\n                    <FontAwesomeIcon icon={faEye} id=\"font\"></FontAwesomeIcon>visibility:\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p>{vis} km</p>\r\n                </div>\r\n              </Col>\r\n              <Col md={6} className=\"d-flex justify-content-between\">\r\n                <div>\r\n                  <p>\r\n                    <FontAwesomeIcon icon={faSun} id=\"font\"></FontAwesomeIcon> UV index:\r\n                  </p>\r\n                </div>\r\n                <div>\r\n                  <p>{uv}</p>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            md={6}\r\n            id=\"hrp\"\r\n            className=\"d-flex flex-column justify-content-between\"\r\n          >\r\n            <h2 id=\"idk\">hourly forecast</h2>\r\n            <Row id=\"hrdata\">{props.myhrarr}</Row>\r\n          </Col>\r\n        </Container>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nexport default Today;\r\n","E:\\weatherapp\\src\\components\\Daily.js",["55"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCloudRain,\r\n  faChevronDown,\r\n  faTemperatureHigh,\r\n  faTemperatureLow,\r\n  faTint,\r\n  faWind,\r\n  faArrowsAltV,\r\n  faSun,\r\n  faEye,\r\n  \r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Daily(props) {\r\n  console.log(props.dayfetch);\r\n  const [isDesktop, setDesktop] = useState(window.innerWidth > 576);\r\n\r\n  const updateMedia = () => {\r\n    setDesktop(window.innerWidth > 576);\r\n    console.log(\"reached hre too\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", updateMedia);\r\n    return () => window.removeEventListener(\"resize\", updateMedia);\r\n  });\r\n\r\n  var myweek = props.dayfetch.data.map(function weeksort(itms) {\r\n    var date = new Date(itms.ts * 1000).toLocaleDateString();\r\n    var dmonth = date.split(\"/\")[1];\r\n    var dyear = date.split(\"/\")[2];\r\n    var present = new Date().toLocaleDateString();\r\n    var pmonth = present.split(\"/\")[1];\r\n    var pyear = present.split(\"/\")[2];\r\n    var descrypt = itms.weather.description;\r\n    var mycode = itms.weather.icon;\r\n    var avgtemp = itms.temp;\r\n    var pope = itms.pop;\r\n    var windspeed = itms.wind_spd.toFixed(2);\r\n    if (date >= present || dmonth > pmonth || dyear > pyear) {\r\n      return (\r\n        <div key={itms.ts}>\r\n          <Accordion>\r\n            <Card>\r\n              <Card.Header>\r\n                <Accordion.Toggle eventKey=\"0\">\r\n                  {isDesktop ? (\r\n                    <Container fluid>\r\n                      <Row className=\"d-flex justify-content-around flex-nowrap\">\r\n                        <div>\r\n                          <h4>{date}</h4>\r\n                        </div>\r\n                        <div>\r\n                          <div className=\"d-flex align-items-center\">\r\n                            <img\r\n                              src={`https://www.weatherbit.io/static/img/icons/${mycode}.png`}\r\n                              alt=\"Weather icon\"\r\n                              id=\"dailyicon\"\r\n                            />\r\n                            <h4>{descrypt}</h4>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                          <FontAwesomeIcon\r\n                            icon={faCloudRain}\r\n                            size=\"2x\"\r\n                          ></FontAwesomeIcon>\r\n                          <h4 id=\"dayp\">{pope}%</h4>\r\n                        </div>\r\n                        <FontAwesomeIcon\r\n                          icon={faChevronDown}\r\n                          size=\"2x\"\r\n                        ></FontAwesomeIcon>\r\n                      </Row>\r\n                    </Container>\r\n                  ) : (\r\n                    <Container fluid>\r\n                      <Row className=\"d-flex justify-content-between flex-nowrap\">\r\n                        <div>\r\n                          <p>{date}</p>\r\n                        </div>\r\n                        <div>\r\n                          <img\r\n                            src={`https://www.weatherbit.io/static/img/icons/${mycode}.png`}\r\n                            alt=\"Weather icon\"\r\n                            id=\"dailyicon\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-center align-items-center\">\r\n                          <FontAwesomeIcon\r\n                            icon={faCloudRain}\r\n                            size=\"2x\"\r\n                          ></FontAwesomeIcon>\r\n                          <p id=\"dayp\">{pope}%</p>\r\n                        </div>\r\n                        <div>\r\n                          <FontAwesomeIcon\r\n                            icon={faChevronDown}\r\n                          ></FontAwesomeIcon>\r\n                        </div>\r\n                      </Row>\r\n                    </Container>\r\n                  )}\r\n                </Accordion.Toggle>\r\n              </Card.Header>\r\n\r\n              <Accordion.Collapse eventKey=\"0\">\r\n                <Card.Body>\r\n                  <Row>\r\n                    <Col md={6} className=\"d-flex justify-content-between\">\r\n                      <p>\r\n                        <FontAwesomeIcon\r\n                          icon={faTint}\r\n                          id=\"font\"\r\n                        ></FontAwesomeIcon>\r\n                        dew point\r\n                      </p>\r\n                      <p>{itms.dewpt} C</p>\r\n                    </Col>\r\n                    <Col md={6} className=\"d-flex justify-content-between\">\r\n                      <p>\r\n                        <FontAwesomeIcon\r\n                          icon={faWind}\r\n                          id=\"font\"\r\n                        ></FontAwesomeIcon>\r\n                        wind speed\r\n                      </p>\r\n                      <p>{windspeed} m/s</p>\r\n                    </Col>\r\n\r\n                    <Col md={6} className=\"d-flex justify-content-between\">\r\n                      <p>\r\n                        <FontAwesomeIcon\r\n                          icon={faTemperatureHigh}\r\n                          id=\"font\"\r\n                        ></FontAwesomeIcon>\r\n                        max temp\r\n                      </p>\r\n                      <p>{itms.max_temp} C</p>\r\n                    </Col>\r\n                    <Col md={6} className=\"d-flex justify-content-between\">\r\n                      <p>\r\n                        <FontAwesomeIcon\r\n                          icon={faTemperatureLow}\r\n                          id=\"font\"\r\n                        ></FontAwesomeIcon>\r\n                        min temp\r\n                      </p>\r\n                      <p>{itms.min_temp} C</p>\r\n                    </Col>\r\n\r\n                    <Col md={6} className=\"d-flex justify-content-between\">\r\n                      <p>\r\n                        <FontAwesomeIcon\r\n                          icon={faTint}\r\n                          id=\"font\"\r\n                        ></FontAwesomeIcon>\r\n                        humidity(relative)\r\n                      </p>\r\n                      <p>{itms.rh}</p>\r\n                    </Col>\r\n                    <Col md={6} className=\"d-flex justify-content-between\">\r\n                      <p>\r\n                        <FontAwesomeIcon\r\n                          icon={faArrowsAltV}\r\n                          id=\"font\"\r\n                        ></FontAwesomeIcon>\r\n                        pressure(mb)\r\n                      </p>\r\n                      <p>{itms.pres}</p>\r\n                    </Col>\r\n                    <Col md={6} className=\"d-flex justify-content-between\">\r\n                      <p>\r\n                        <FontAwesomeIcon\r\n                          icon={faSun}\r\n                          id=\"font\"\r\n                        ></FontAwesomeIcon>\r\n                        Max UV index\r\n                      </p>\r\n                      <p>{itms.uv}</p>\r\n                    </Col>\r\n                    <Col md={6} className=\"d-flex justify-content-between\">\r\n                      <p>\r\n                        <FontAwesomeIcon\r\n                          icon={faEye}\r\n                          id=\"font\"\r\n                        ></FontAwesomeIcon>\r\n                        Visibility\r\n                      </p>\r\n                      <p>{itms.vis} KM</p>\r\n                    </Col>\r\n                    \r\n                  </Row>\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          </Accordion>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div key={itms.ts}></div>;\r\n    }\r\n  });\r\n  return <div>{myweek}</div>;\r\n}\r\n\r\nexport default Daily;\r\n","E:\\weatherapp\\src\\components\\Hourly.js",["56","57"],"import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCloudRain,\r\n  faChevronDown,\r\n  faTint,\r\n  faWind,\r\n  faArrowsAltV,\r\n  faTemperatureLow,\r\n  faSun\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nfunction Hourly(props) {\r\n  const [isDesktop, setdDesktop] = useState(window.innerWidth > 576);\r\n\r\n  const updatedMedia = () => {\r\n    if (window.innerWidth > 576) {\r\n      setdDesktop(true);\r\n    } else {\r\n      setdDesktop(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    //console.log(\"useefect working\");\r\n    window.addEventListener(\"resize\", updatedMedia);\r\n    return () => window.removeEventListener(\"resize\", updatedMedia);\r\n  });\r\n  var des;\r\n  var temp2;\r\n  var temphrobj = props.hdetails;\r\n  var presenttime = new Date().toLocaleTimeString().split(\":\")[0];\r\n  var presentdate = new Date().toLocaleDateString();\r\n  var presentm = presentdate.split(\"/\")[1];\r\n  var presenty = presentdate.split(\"/\")[2];\r\n  var mylist = temphrobj.hourly.map(function (item) {\r\n    for (const myobj2 of item.weather) {\r\n      var iconcode = myobj2.icon;\r\n      des = myobj2.description;\r\n    }\r\n\r\n    temp2 = item.temp.toString().split(\".\")[0];\r\n\r\n    var dtxd = new Date(item.dt * 1000).toLocaleDateString();\r\n    var dtxt = new Date(item.dt * 1000).toLocaleTimeString().split(\":\")[0];\r\n    var dtxm = dtxd.split(\"/\")[1];\r\n    var dtxy = dtxd.split(\"/\")[2];\r\n    var dtxt2;\r\n    if (dtxt > 12) {\r\n      dtxt2 = Number(dtxt) - 12;\r\n    }\r\n    if (\r\n      (dtxt >= presenttime && dtxd === presentdate) ||\r\n      dtxd > presentdate ||\r\n      dtxm > presentm ||\r\n      dtxy > presenty\r\n    ) {\r\n      return (\r\n        <div key={item.dt} className=\"d-flex justify-content-center\">\r\n          <Accordion>\r\n            <Card>\r\n              <Card.Header>\r\n                <Accordion.Toggle eventKey=\"0\">\r\n                  {isDesktop ? (\r\n                    <Container fluid>\r\n                      <Row className=\"d-flex align-items-center\">\r\n                        {dtxt > 12 ? (\r\n                          <Col xs={4}>\r\n                            <h3>\r\n                              {dtxd}\r\n                              <br></br>\r\n                              {dtxt2}pm\r\n                            </h3>\r\n                          </Col>\r\n                        ) : (\r\n                          <Col xs={4}>\r\n                            <h3>\r\n                              {dtxd}\r\n                              <br></br>\r\n                              {dtxt} am\r\n                            </h3>\r\n                          </Col>\r\n                        )}\r\n\r\n                        <Col xs={4} className=\"d-flex align-items-center\">\r\n                          <div>\r\n                            <img\r\n                              id=\"wicon2\"\r\n                              src={`http://openweathermap.org/img/wn/${iconcode}@2x.png`}\r\n                              alt=\"Weather icon\"\r\n                            />\r\n                          </div>\r\n                          <div>\r\n                            <h3>{des}</h3>\r\n                          </div>\r\n                        </Col>\r\n\r\n                        <Col>\r\n                          <h3>{temp2} C</h3>\r\n                        </Col>\r\n                        <Col>\r\n                          <FontAwesomeIcon\r\n                            icon={faChevronDown}\r\n                            size=\"2x\"\r\n                          ></FontAwesomeIcon>\r\n                        </Col>\r\n                      </Row>\r\n                    </Container>\r\n                  ) : (\r\n                    <Container fluid>\r\n                      <Row className=\"d-flex justify-content-between align-items-center flex-nowrap\">\r\n                        {dtxt > 12 ? (\r\n                          <div>\r\n                            <p>\r\n                              {dtxd}\r\n                              <br></br>\r\n                              {dtxt2}pm\r\n                            </p>\r\n                          </div>\r\n                        ) : (\r\n                          <div>\r\n                            <p>\r\n                              {dtxd}\r\n                              <br></br>\r\n                              {dtxt} am\r\n                            </p>\r\n                          </div>\r\n                        )}\r\n\r\n                        <div>\r\n                          <img\r\n                            id=\"wicon2\"\r\n                            src={`http://openweathermap.org/img/wn/${iconcode}@2x.png`}\r\n                            alt=\"Weather icon\"\r\n                          />\r\n                        </div>\r\n\r\n                        <div>\r\n                          <p>{temp2} C</p>\r\n                        </div>\r\n                        <div>\r\n                          <FontAwesomeIcon\r\n                            icon={faChevronDown}\r\n                          ></FontAwesomeIcon>\r\n                        </div>\r\n                      </Row>\r\n                    </Container>\r\n                  )}\r\n                </Accordion.Toggle>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey=\"0\">\r\n                <Card.Body>\r\n                  <Row>\r\n                    <Col md={6} className=\"d-flex justify-content-between\">\r\n                      <p>\r\n                        <FontAwesomeIcon\r\n                          icon={faTint}\r\n                          id=\"font\"\r\n                        ></FontAwesomeIcon>\r\n                        humidity\r\n                      </p>\r\n                      <p>{item.humidity}%</p>\r\n                    </Col>\r\n                    <Col md={6} className=\"d-flex justify-content-between\">\r\n                      <p>\r\n                        <FontAwesomeIcon\r\n                          icon={faTemperatureLow}\r\n                          id=\"font\"\r\n                        ></FontAwesomeIcon>\r\n                        Feels like\r\n                      </p>\r\n                      <p>{item.feels_like} C</p>\r\n                    </Col>\r\n                    <Col md={6} className=\"d-flex justify-content-between\" >\r\n                      <p>\r\n                        {\" \"}\r\n                        <FontAwesomeIcon\r\n                          icon={faWind}\r\n                          id=\"font\"\r\n                        ></FontAwesomeIcon>\r\n                        wind speed\r\n                      </p>\r\n                      <p>{item.wind_speed} m/s</p>\r\n                    </Col>\r\n                    <Col md={6} className=\"d-flex justify-content-between\">\r\n                      <p>\r\n                        <FontAwesomeIcon\r\n                          icon={faTint}\r\n                          id=\"font\"\r\n                        ></FontAwesomeIcon>\r\n                        dew point\r\n                      </p>\r\n                      <p>{item.dew_point} C</p>\r\n                    </Col>\r\n                    <Col md={6} className=\"d-flex justify-content-between\">\r\n                      <p>\r\n                        <FontAwesomeIcon\r\n                          icon={faArrowsAltV}\r\n                          id=\"font\"\r\n                        ></FontAwesomeIcon>\r\n                        pressure\r\n                      </p>\r\n                      <p>{item.pressure} hPa</p>\r\n                    </Col>\r\n                    <Col md={6} className=\"d-flex justify-content-between\">\r\n                      <p>\r\n                        <FontAwesomeIcon\r\n                          icon={faSun}\r\n                          id=\"font\"\r\n                        ></FontAwesomeIcon>\r\n                        UV index\r\n                      </p>\r\n                      <p>{item.uvi}</p>\r\n                    </Col>\r\n                  </Row>\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          </Accordion>\r\n        </div>\r\n      );\r\n    }\r\n  });\r\n  return <div>{mylist}</div>;\r\n}\r\n\r\nexport default Hourly;\r\n","E:\\weatherapp\\src\\components\\Maps.js",["58","59","60","61","62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":12},{"ruleId":"67","severity":1,"message":"71","line":4,"column":34,"nodeType":"69","messageId":"70","endLine":4,"endColumn":37},{"ruleId":"67","severity":1,"message":"72","line":7,"column":23,"nodeType":"69","messageId":"70","endLine":7,"endColumn":30},{"ruleId":"67","severity":1,"message":"73","line":8,"column":8,"nodeType":"69","messageId":"70","endLine":8,"endColumn":12},{"ruleId":"67","severity":1,"message":"74","line":9,"column":8,"nodeType":"69","messageId":"70","endLine":9,"endColumn":17},{"ruleId":"67","severity":1,"message":"75","line":15,"column":10,"nodeType":"69","messageId":"70","endLine":15,"endColumn":25},{"ruleId":"67","severity":1,"message":"76","line":31,"column":10,"nodeType":"69","messageId":"70","endLine":31,"endColumn":16},{"ruleId":"67","severity":1,"message":"77","line":31,"column":18,"nodeType":"69","messageId":"70","endLine":31,"endColumn":27},{"ruleId":"67","severity":1,"message":"78","line":33,"column":7,"nodeType":"69","messageId":"70","endLine":33,"endColumn":15},{"ruleId":"67","severity":1,"message":"79","line":34,"column":9,"nodeType":"69","messageId":"70","endLine":34,"endColumn":12},{"ruleId":"80","severity":1,"message":"81","line":85,"column":46,"nodeType":"82","messageId":"83","endLine":85,"endColumn":63},{"ruleId":"84","severity":1,"message":"85","line":93,"column":42,"nodeType":"86","messageId":"87","endLine":93,"endColumn":44},{"ruleId":"88","severity":1,"message":"89","line":143,"column":6,"nodeType":"90","endLine":143,"endColumn":13,"suggestions":"91"},{"ruleId":"84","severity":1,"message":"85","line":164,"column":13,"nodeType":"86","messageId":"87","endLine":164,"endColumn":15},{"ruleId":"84","severity":1,"message":"85","line":215,"column":13,"nodeType":"86","messageId":"87","endLine":215,"endColumn":15},{"ruleId":"67","severity":1,"message":"92","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":9},{"ruleId":"67","severity":1,"message":"93","line":25,"column":10,"nodeType":"69","messageId":"70","endLine":25,"endColumn":17},{"ruleId":"67","severity":1,"message":"94","line":25,"column":19,"nodeType":"69","messageId":"70","endLine":25,"endColumn":26},{"ruleId":"84","severity":1,"message":"85","line":52,"column":18,"nodeType":"86","messageId":"87","endLine":52,"endColumn":20},{"ruleId":"67","severity":1,"message":"95","line":43,"column":9,"nodeType":"69","messageId":"70","endLine":43,"endColumn":16},{"ruleId":"67","severity":1,"message":"96","line":8,"column":3,"nodeType":"69","messageId":"70","endLine":8,"endColumn":14},{"ruleId":"80","severity":1,"message":"97","line":38,"column":37,"nodeType":"82","messageId":"83","endLine":38,"endColumn":46},{"ruleId":"67","severity":1,"message":"98","line":8,"column":26,"nodeType":"69","messageId":"70","endLine":8,"endColumn":35},{"ruleId":"67","severity":1,"message":"99","line":11,"column":20,"nodeType":"69","messageId":"70","endLine":11,"endColumn":26},{"ruleId":"67","severity":1,"message":"100","line":34,"column":9,"nodeType":"69","messageId":"70","endLine":34,"endColumn":12},{"ruleId":"67","severity":1,"message":"101","line":39,"column":7,"nodeType":"69","messageId":"70","endLine":39,"endColumn":10},{"ruleId":"67","severity":1,"message":"102","line":46,"column":11,"nodeType":"69","messageId":"70","endLine":46,"endColumn":15},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'NavItem' is defined but never used.","'Card' is defined but never used.","'Accordion' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'Mylist' is assigned a value but never used.","'setmylist' is assigned a value but never used.","'iconcode' is defined but never used.","'api' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of function 'hrdetail'.","FunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'late' and 'long'. Either include them or remove the dependency array.","ArrayExpression",["105"],"'$' is defined but never used.","'curtime' is assigned a value but never used.","'settime' is assigned a value but never used.","'avgtemp' is assigned a value but never used.","'faCloudRain' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of function.","'useEffect' is defined but never used.","'Button' is defined but never used.","'map' is assigned a value but never used.","'lon' is assigned a value but never used.","'temp' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},"Update the dependencies array to be: [items, late, long]",{"range":"108","text":"109"},[4638,4645],"[items, late, long]"]