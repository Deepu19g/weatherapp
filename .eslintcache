[{"E:\\weatherapp\\src\\index.js":"1","E:\\weatherapp\\src\\App.js":"2","E:\\weatherapp\\src\\reportWebVitals.js":"3","E:\\weatherapp\\src\\components\\Today.js":"4","E:\\weatherapp\\src\\components\\Daily.js":"5"},{"size":500,"mtime":1609347388334,"results":"6","hashOfConfig":"7"},{"size":9572,"mtime":1609350339876,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":2698,"mtime":1608864481877,"results":"10","hashOfConfig":"7"},{"size":5059,"mtime":1609456350355,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"8i3ggk",{"filePath":"15","messages":"16","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\weatherapp\\src\\index.js",[],["25","26"],"E:\\weatherapp\\src\\App.js",["27","28","29","30","31","32","33","34","35","36","37"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport \"./components/sylesheets.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Navbar, Nav, NavItem } from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Accordion from \"react-bootstrap/Accordion\";\n\nimport Today from \"./components/Today\";\nimport Daily from \"./components/Daily\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faCloudRain} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nlibrary.add(faCloudRain);\n\nfunction App() {\n  const [name, setname] = useState(\" \");\n  //const [IsLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState({});\n  const [flag, setflag] = useState(0);\n  const [hdetails, sethdetail] = useState({});\n  const [flag2, setflag2] = useState(0);\n  const [late, setlat] = useState();\n  const [long, setlong] = useState();\n  const [Mylist, setmylist] = useState([]);\n  const [myday, setmyday] = useState([]);\n  var iconcode;\n  const api = {\n    base2: \"https://community-open-weather-map.p.rapidapi.com/forecast?\",\n    base: \"https://community-open-weather-map.p.rapidapi.com/weather?\",\n    //id: \"e5005f9710msh08af91097dd5460p1acaaajsn2fe300cfa360\",\n  };\n  const [myhrarr, setmyhrarr] = useState([]);\n  function onSearch(e) {\n    setflag(1);\n    e.preventDefault();\n    console.log(\"reached onserach\");\n    fetch(\n      `https://api.weatherbit.io/v2.0/current?city=${name}&key=438b481d5a99435daccd13ab74b8117b`\n    )\n      .then((res) => res.json())\n      .then((response) => {\n        console.log(response);\n        for (const obi of response.data) {\n          setlat(obi.lat);\n          console.log(obi.lat);\n          setlong(obi.lon);\n        }\n\n        setItems(response);\n      })\n\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n  console.log(late);\n  useEffect(() => {\n    var time = new Date().toString().split(\" \")[4];\n\n    var curdate = new Date().toLocaleDateString();\n    console.log(curdate);\n    //fetch(`https://api.weatherbit.io/v2.0/forecast/hourly?city=${name}&key=438b481d5a99435daccd13ab74b8117b&hours=48`)\n    fetch(\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${late}&lon=${long}&exclude={minutely,alerts}&units=metric&appid=f294bbf17831f5a084f814e8ead88517`\n    )\n      .then((res) => res.json())\n      .then((response) => {\n        console.log(response);\n\n        sethdetail(response);\n        var i = 0;\n        var dtxpm = 0;\n        var mytemhrarr = response.hourly.map(function hrdetail(itd) {\n          //var dtxtime = itd.dt_txt.split(\" \")[1];\n          var dtxtime = new Date(itd.dt * 1000)\n            .toLocaleTimeString()\n            .split(\":\")[0];\n\n          var dtxdate = new Date(itd.dt * 1000).toLocaleDateString();\n\n          if (dtxtime >= time && curdate == dtxdate && i < 4) {\n            for (const myobj of itd.weather) {\n              var icod = myobj.icon;\n            }\n            console.log(icod);\n            if (dtxtime > 12) {\n              dtxpm = Number(dtxtime) - 12;\n            }\n            console.log(dtxpm);\n            if (dtxpm === 0) {\n              console.log(dtxtime);\n              console.log(itd.temp);\n              i++;\n\n              return (\n                <Col xs={3} key={itd.dt}>\n                  <img\n                    id=\"wicon\"\n                    src={`http://openweathermap.org/img/wn/${icod}@2x.png`}\n                    alt=\"Weather icon\"\n                  />\n\n                  <h3>{itd.temp}</h3>\n                  <h4>{dtxtime}am</h4>\n                </Col>\n              );\n            } else {\n              i++;\n              return (\n                <Col xs={3} key={itd.dt}>\n                  <img\n                    id=\"wicon\"\n                    src={`http://openweathermap.org/img/wn/${icod}@2x.png`}\n                    alt=\"Weather icon\"\n                  />\n\n                  <h3>{itd.temp}</h3>\n                  <h4>{dtxpm}pm</h4>\n                </Col>\n              );\n            }\n          }\n        });\n        setmyhrarr(mytemhrarr);\n        //setmyday(response.daily)\n        console.log(mytemhrarr);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n      fetch(`https://api.weatherbit.io/v2.0/forecast/daily?city=${name}&key=438b481d5a99435daccd13ab74b8117b`)\n      .then((res) => res.json())\n      .then((response) => {\n        console.log(response);\n        setmyday(response)\n      }\n      )\n      .catch((err) => {\n        console.error(err);\n      })\n  }, [items]);\n  function hourlyfun() {\n    setflag2(1);\n    var des;\n    var temp2;\n    var temphrobj = hdetails;\n    var icon;\n    var mylist = temphrobj.hourly.map(function (item) {\n      for (const myobj2 of item.weather) {\n        var iconcode = myobj2.icon;\n        des = myobj2.description;\n      }\n\n      temp2 = item.temp;\n      //var dtxt = item.dt_txt;\n      var dtxt = new Date(item.dt * 1000).toLocaleString();\n      return (\n        <div key={dtxt} className=\"d-flex justify-content-between\">\n          <Accordion defaultActiveKey=\"0\">\n            <Card>\n              <Card.Header>\n                <Row>\n                  <Accordion.Toggle eventKey=\"0\">\n                    <Col>\n                      <h3>{dtxt}</h3>\n                    </Col>\n                    <Col xs={4}>\n                      <img\n                        id=\"wicon2\"\n                        src={`http://openweathermap.org/img/wn/${iconcode}@2x.png`}\n                        alt=\"Weather icon\"\n                      />\n\n                      <h3>{des}</h3>\n                    </Col>\n\n                    <Col>\n                      <h3>{temp2} C</h3>\n                    </Col>\n                  </Accordion.Toggle>\n                </Row>\n              </Card.Header>\n              <Accordion.Collapse eventKey=\"0\">\n                <Card.Body>\n                  <div className=\"d-flex justify-content-around\">\n                    <div className=\"d-flex flex-column\">\n                      <h4>humidity</h4>\n                      <h3>{item.humidity}</h3>\n                    </div>\n                    <div className=\"d-flex flex-column\">\n                      <h4>Feels like</h4>\n                      <h3>{item.feels_like}</h3>\n                    </div>\n                    <div className=\"d-flex flex-column\">\n                      <h4>wind speed</h4>\n                      <h3>{item.wind_speed}</h3>\n                    </div>\n                  </div>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n          </Accordion>\n\n          {/*<Col sm={4}>\n            <h2>{dtxt}</h2>\n          </Col>\n          <Col sm={4}>\n            <div className=\"d-flex align-items-center\">\n              <img\n                id=\"wicon\"\n                src={`https://www.weatherbit.io/static/img/icons/${iconcode}.png `}\n                alt=\"Weather icon\"\n              />\n              <h2>{des}</h2>\n            </div>\n          </Col>\n\n          <Col>\n            <h2>{temp2} C</h2>\n          </Col>\n          <Col>\n            <h2>{item.rh}</h2>\n      </Col>*/}\n        </div>\n      );\n    });\n\n    setmylist(mylist);\n  }\n  //for (var j=0;j<Mylist.length;j++){\n  // if(Mylist[j])\n  //}\n  console.log(items);\n\n  if (flag2 == 2) {\n    console.log(\"reached dayfetch\");\n    \n    \n    return (\n      <div id=\"daily\">\n        <Navbar bg=\"primary\" variant=\"dark\">\n          <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link onClick={hourlyfun}>hourly</Nav.Link>\n            <Nav.Link onClick={() => setflag2(0)}>Today</Nav.Link>\n            <Nav.Link onClick={() => setflag2(2)}>Daily</Nav.Link>\n          </Nav>\n        </Navbar>\n        <Container fluid>\n          <div className=\"d-flex flex-column align-items-center\">\n            <Daily dayfetch={myday}></Daily>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n  if (flag2 == 0) {\n    return (\n      <div className=\"App\">\n        <Navbar bg=\"primary\" variant=\"dark\">\n          <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link onClick={hourlyfun}>hourly</Nav.Link>\n            <Nav.Link onClick={() => setflag2(0)}>Today</Nav.Link>\n            <Nav.Link onClick={()=>setflag2(2)}>Daily</Nav.Link>\n          </Nav>\n        </Navbar>\n        <Container fluid>\n          <form>\n            <input\n              type=\"text\"\n              onChange={(e) => setname(e.target.value)}\n            ></input>\n            <Button type=\"submit\" onClick={onSearch}>\n              submit\n            </Button>\n          </form>\n\n          <Today data={items} name={name} flag={flag} myhrarr={myhrarr}></Today>\n        </Container>\n      </div>\n    );\n  } else {\n    return (\n      <div id=\"mydiv\">\n        <Navbar bg=\"primary\" variant=\"dark\">\n          <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link onClick={hourlyfun}>hourly</Nav.Link>\n            <Nav.Link onClick={() => setflag2(0)}>Today</Nav.Link>\n            <Nav.Link onClick={() => setflag2(2)}>Daily</Nav.Link>\n          </Nav>\n        </Navbar>\n        <Container\n          fluid\n          className=\"d-flex flex-column justify-content-center align-items-center\"\n        >\n          <Col md={6} id=\"hr\">\n            {Mylist}\n          </Col>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","E:\\weatherapp\\src\\reportWebVitals.js",[],"E:\\weatherapp\\src\\components\\Today.js",["38","39","40","41"],"import React, { useState, useEffect } from \"react\";\r\nimport $ from \"jquery\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n//import { unstable_renderSubtreeIntoContainer } from \"react-dom\";\r\nfunction Today(props) {\r\n  const [humidity, sethumidity] = useState(0);\r\n  const [atm, setatm] = useState(0);\r\n  const [speed, setspeed] = useState(0);\r\n\r\n  const [temper, settemp] = useState(0);\r\n  const [feelslike, setfeels] = useState();\r\n\r\n  const [iconcode, setcode] = useState(0);\r\n  const [descrypt, setdes] = useState(\" \");\r\n  const [curtime, settime] = useState();\r\n  useEffect(() => {\r\n    for (const [key, value] of Object.entries(props.data)) {\r\n      console.log(key, value);\r\n\r\n      if (key === \"data\") {\r\n        for (const obj of value) {\r\n          settemp(obj.temp);\r\n          setfeels(obj.app_temp);\r\n          setatm(obj.slp);\r\n          sethumidity(obj.rh);\r\n          setspeed(obj.wind_spd);\r\n          setdes(obj.weather.description);\r\n          setcode(obj.weather.icon);\r\n        }\r\n      }\r\n    }\r\n  }, [props.data]);\r\n\r\n  if (props.flag == 1) {\r\n    return (\r\n      <div>\r\n        <Container\r\n          fluid\r\n          className=\"d-flex flex-column align-items-center\"\r\n          id=\"sup\"\r\n        >\r\n          <Col md={6} id=\"main\" className=\"d-flex justify-content-between \">\r\n            <div>\r\n              <h1 id=\"first\">{temper} C</h1>\r\n              <h3 id=\"second\">{props.name}</h3>\r\n\r\n              <h3 id=\"third\">{descrypt}</h3>\r\n            </div>\r\n            <div>\r\n              <div id=\"icon\">\r\n                <img\r\n                  src={`https://www.weatherbit.io/static/img/icons/${iconcode}.png `}\r\n                  alt=\"Weather icon\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col md={6} id=\"more\">\r\n            <Row>\r\n              <Col>\r\n                \r\n                <h3>humidity: {humidity}</h3>\r\n              </Col>\r\n              <Col>\r\n                <h3>pressure: {atm}mb</h3>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <h3>windspeed: {speed}m/s</h3>\r\n              </Col>\r\n              <Col>\r\n                <h3>feels like:{feelslike} C</h3>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col\r\n            md={6}\r\n            id=\"hrp\"\r\n            className=\"d-flex flex-column justify-content-between\"\r\n          >\r\n            <h2 id=\"idk\">hourly forecast</h2>\r\n            <Row id=\"hrdata\">{props.myhrarr}</Row>\r\n          </Col>\r\n        </Container>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nexport default Today;\r\n","E:\\weatherapp\\src\\components\\Daily.js",["42"],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":12},{"ruleId":"47","severity":1,"message":"51","line":7,"column":23,"nodeType":"49","messageId":"50","endLine":7,"endColumn":30},{"ruleId":"47","severity":1,"message":"52","line":15,"column":10,"nodeType":"49","messageId":"50","endLine":15,"endColumn":25},{"ruleId":"47","severity":1,"message":"53","line":30,"column":7,"nodeType":"49","messageId":"50","endLine":30,"endColumn":15},{"ruleId":"47","severity":1,"message":"54","line":31,"column":9,"nodeType":"49","messageId":"50","endLine":31,"endColumn":12},{"ruleId":"55","severity":1,"message":"56","line":77,"column":46,"nodeType":"57","messageId":"58","endLine":77,"endColumn":63},{"ruleId":"59","severity":1,"message":"60","line":85,"column":42,"nodeType":"61","messageId":"62","endLine":85,"endColumn":44},{"ruleId":"63","severity":1,"message":"64","line":145,"column":6,"nodeType":"65","endLine":145,"endColumn":13,"suggestions":"66"},{"ruleId":"47","severity":1,"message":"67","line":151,"column":9,"nodeType":"49","messageId":"50","endLine":151,"endColumn":13},{"ruleId":"59","severity":1,"message":"60","line":239,"column":13,"nodeType":"61","messageId":"62","endLine":239,"endColumn":15},{"ruleId":"59","severity":1,"message":"60","line":261,"column":13,"nodeType":"61","messageId":"62","endLine":261,"endColumn":15},{"ruleId":"47","severity":1,"message":"68","line":2,"column":8,"nodeType":"49","messageId":"50","endLine":2,"endColumn":9},{"ruleId":"47","severity":1,"message":"69","line":16,"column":10,"nodeType":"49","messageId":"50","endLine":16,"endColumn":17},{"ruleId":"47","severity":1,"message":"70","line":16,"column":19,"nodeType":"49","messageId":"50","endLine":16,"endColumn":26},{"ruleId":"59","severity":1,"message":"60","line":35,"column":18,"nodeType":"61","messageId":"62","endLine":35,"endColumn":20},{"ruleId":"47","severity":1,"message":"71","line":31,"column":9,"nodeType":"49","messageId":"50","endLine":31,"endColumn":16},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'NavItem' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'iconcode' is defined but never used.","'api' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of function 'hrdetail'.","FunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'late', 'long', and 'name'. Either include them or remove the dependency array.","ArrayExpression",["74"],"'icon' is defined but never used.","'$' is defined but never used.","'curtime' is assigned a value but never used.","'settime' is assigned a value but never used.","'avgtemp' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [items, late, long, name]",{"range":"77","text":"78"},[4666,4673],"[items, late, long, name]"]